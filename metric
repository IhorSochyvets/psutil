#!/usr/bin/python3

import sys, psutil

num = len(sys.argv)
par = sys.argv[1:]
s1 = ['cpu']
s2 = ['mem']

if num == 2:
	if (par) == (s1):
		########## CPU INFO ##########
		print(" ")
		print("Output of cpu_times:")
		print(psutil.cpu_times())

		# blocking
		print(" ")
		print("Output of cpu_percent(interval=1):")
		print(psutil.cpu_percent(interval=1))

		# non-blocking (percentage since last call)
		print(" ")
		print("Output of cpu_percent(interval=None):")
		print(psutil.cpu_percent(interval=None))

		# blocking, per-cpu
		print(" ")
		print("Output of cpu_percent(interval=1, percpu=True):")
		print(psutil.cpu_percent(interval=1, percpu=True))

		print(" ")
		print("Output of cpu_count():")
		print(psutil.cpu_count())
		
		print(" ")
		print("Output of cpu_count(logical=False):")
		print(psutil.cpu_count(logical=False))

		print(" ")
		print("Output of len(psutil.Process().cpu_affinity()):")
		print(len(psutil.Process().cpu_affinity()))

		print(" ")
		print("Output of cpu_stats():")
		print(psutil.cpu_stats())

		print(" ")
		print("Output of cpu_freq():")
		print(psutil.cpu_freq())

		print(" ")
		print("Output of cpu_freq(percpu=True):")
		print(psutil.cpu_freq(percpu=True))

		print(" ")
		print("Output of getloadavg():")
		print(psutil.getloadavg())

	
	elif (par) == (s2): 
		########## MEMORY INFO ##########
		print(" ")
		print("Output of virtual_memory():")
		mem = psutil.virtual_memory()
		print(mem)
		print(" ")
		print("Output of swap_memory():")
		print(psutil.swap_memory())
		print(" ")

	else:
		print("Please, use one parameter: cpu or mem")
else:
	print("Please, use one parameter: cpu or mem")
